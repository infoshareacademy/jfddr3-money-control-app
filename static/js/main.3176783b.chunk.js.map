{"version":3,"sources":["views/Dashboard/Dashboard.js","config/firebase.js","contexts/AuthContext.js","views/SignIn/SignIn.js","views/SignUp/SignUp.js","views/MockDashboard/MockDashboard.js","components/PrivateRoute.js","reportWebVitals.js","index.js"],"names":["Dashboard","app","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","auth","firestore","AuthContext","storage","GoogleAuthProvider","createContext","useAuth","useContext","AuthProvider","children","useState","currentUser","setCurrentUser","loading","setLoading","useEffect","onAuthStateChanged","user","value","signUp","email","password","createUserWithEmailAndPassword","signIn","signInWithEmailAndPassword","signOut","Provider","StyledButton","styled","Button","StyledAvatar","Avatar","StyledTextField","TextField","StyledPaper","Paper","SignIn","error","setError","history","useHistory","e","a","preventDefault","target","push","Grid","align","elevation","Typography","variant","onSubmit","id","name","label","helperText","required","type","color","disabled","to","MockAlert","p","SignUp","serverError","setServerError","inputError","setInputError","handleSubmit","passwordConfirm","MockDashboard","Container","onClick","PrivateRoute","Component","component","rest","render","props","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","basename","exact","path","document","getElementById"],"mappings":"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","file":"static/js/main.3176783b.chunk.js","sourcesContent":["import React from 'react';\nimport { Container, Typography } from '@material-ui/core';\n\nfunction Dashboard() {\n  return (\n    <Container>\n      <Typography>Dashboard</Typography>\n    </Container>\n  );\n}\n\nexport default Dashboard;\n","import firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\nimport 'firebase/storage';\n\nconst firebaseConfig = {\n  apiKey: 'AIzaSyB8mOz9VkGizAZvyZCWOnMyDhETCi8o5WE',\n  authDomain: 'moneycontrol-eed33.firebaseapp.com',\n  projectId: 'moneycontrol-eed33',\n  storageBucket: 'moneycontrol-eed33.appspot.com',\n  messagingSenderId: '176388755167',\n  appId: '1:176388755167:web:cfff45c60f74d7a322a36a'\n};\n\nconst app = firebase.initializeApp(firebaseConfig);\n\nexport const firestore = firebase.firestore();\nexport const auth = app.auth();\nexport const storage = firebase.storage();\n\nexport const provider = new firebase.auth.GoogleAuthProvider();\nexport const signInWithGoogle = () => auth.signInWithPopup(provider);\nexport const signOut = () => auth.signOut(provider);\n\nexport default firebase;\n","import React, { createContext, useContext, useState, useEffect } from 'react';\nimport { auth } from '../config/firebase';\n\nconst AuthContext = createContext();\n\nexport function useAuth() {\n  return useContext(AuthContext);\n}\n\nexport function AuthProvider({ children }) {\n  const [currentUser, setCurrentUser] = useState();\n  const [loading, setLoading] = useState(true);\n\n  function signUp(email, password) {\n    return auth.createUserWithEmailAndPassword(email, password);\n  }\n\n  function signIn(email, password) {\n    return auth.signInWithEmailAndPassword(email, password);\n  }\n\n  function signOut() {\n    return auth.signOut();\n  }\n\n  useEffect(() => {\n    const unsubscribe = auth.onAuthStateChanged(user => {\n      setCurrentUser(user);\n      setLoading(false);\n    });\n\n    return unsubscribe;\n  }, []);\n\n  const value = {\n    currentUser,\n    signUp,\n    signIn,\n    signOut\n  };\n\n  return (\n    <AuthContext.Provider value={value}>\n      {!loading && children}\n    </AuthContext.Provider>\n  );\n}\n","import React, { useState } from 'react';\nimport { useAuth } from '../../contexts/AuthContext';\nimport { Link, useHistory } from 'react-router-dom';\n\nimport styled from 'styled-components';\nimport {\n  Grid,\n  Paper,\n  Avatar,\n  TextField,\n  Button,\n  Typography\n} from '@material-ui/core';\nimport LockOpenOutlinedIcon from '@material-ui/icons/LockOpenOutlined';\n\nconst StyledButton = styled(Button)`\n  margin: 10px;\n  background-color: #156a77;\n`;\n\nconst StyledAvatar = styled(Avatar)`\n  background-color: #156a77;\n`;\n\nconst StyledTextField = styled(TextField)`\n  margin: 1rem;\n  width: '25ch';\n`;\n\nconst StyledPaper = styled(Paper)`\n  padding: 20px;\n  height: 50vh;\n  width: 280px;\n  margin: 20px auto;\n`;\n\nconst SignIn = () => {\n  const { signIn } = useAuth();\n  const [error, setError] = useState('');\n  const [loading, setLoading] = useState(false);\n  const history = useHistory();\n\n  async function handleSubmit(e) {\n    e.preventDefault();\n\n    try {\n      setError('');\n      setLoading(true);\n      await signIn(e.target.email.value, e.target.password.value);\n      history.push('/');\n    } catch {\n      setError('Failed to sign in');\n      setLoading(false);\n    }\n  }\n\n  return (\n    <Grid align=\"center\">\n      <StyledPaper elevation={10}>\n        <Grid align=\"center\">\n          <StyledAvatar>\n            <LockOpenOutlinedIcon />\n          </StyledAvatar>\n          <Typography variant=\"h4\">Sign In</Typography>\n        </Grid>\n        {error && <p>{error}</p>}\n        <form onSubmit={handleSubmit}>\n          <StyledTextField\n            id=\"email\"\n            name=\"email\"\n            label=\"E-mail\"\n            variant=\"outlined\"\n            helperText=\"\"\n            required\n          />\n          <StyledTextField\n            id=\"password\"\n            name=\"password\"\n            label=\"Password\"\n            variant=\"outlined\"\n            type=\"password\"\n            required\n          />\n          <Grid>\n            <StyledButton\n              type=\"submit\"\n              variant=\"contained\"\n              color=\"primary\"\n              disabled={loading}\n            >\n              Sign In\n            </StyledButton>\n            <Typography>\n              Need an account? <Link to=\"/signup\">Sign Up</Link>\n            </Typography>\n          </Grid>\n        </form>\n      </StyledPaper>\n    </Grid>\n  );\n};\n\nexport default SignIn;\n","import React, { useState } from 'react';\nimport { useAuth } from '../../contexts/AuthContext';\nimport { Link, useHistory } from 'react-router-dom';\n\nimport styled from 'styled-components';\nimport {\n  Grid,\n  Paper,\n  Avatar,\n  TextField,\n  Button,\n  Typography\n} from '@material-ui/core';\nimport LockOpenOutlinedIcon from '@material-ui/icons/LockOpenOutlined';\n\nconst StyledButton = styled(Button)`\n  margin: 10px;\n  background-color: #156a77;\n`;\n\nconst StyledAvatar = styled(Avatar)`\n  background-color: #156a77;\n`;\n\nconst StyledTextField = styled(TextField)`\n  margin: 1rem;\n  width: '25ch';\n`;\n\nconst StyledPaper = styled(Paper)`\n  padding: 20px;\n  height: 50vh;\n  width: 280px;\n  margin: 20px auto;\n`;\n\nconst MockAlert = styled.p`\n  color: red;\n`;\n\nconst SignUp = () => {\n  const { signUp } = useAuth();\n  const [serverError, setServerError] = useState('');\n  const [inputError, setInputError] = useState('');\n  const [loading, setLoading] = useState(false);\n  const history = useHistory();\n\n  async function handleSubmit(e) {\n    e.preventDefault();\n    setInputError('');\n\n    if (e.target.password.value !== e.target.passwordConfirm.value) {\n      return setInputError('Passwords do not match');\n    }\n\n    try {\n      setServerError('');\n      setLoading(true);\n      await signUp(e.target.email.value, e.target.password.value);\n      history.push('/');\n    } catch {\n      setServerError('Failed to create an account');\n      setLoading(false);\n    }\n  }\n\n  return (\n    <Grid align=\"center\">\n      <StyledPaper elevation={10}>\n        <Grid align=\"center\">\n          <StyledAvatar>\n            <LockOpenOutlinedIcon />\n          </StyledAvatar>\n          <Typography variant=\"h4\">Sign Up</Typography>\n        </Grid>\n        {serverError && <MockAlert>{serverError}</MockAlert>}\n        <form onSubmit={handleSubmit}>\n          <StyledTextField\n            id=\"email\"\n            name=\"email\"\n            label=\"E-mail\"\n            variant=\"outlined\"\n            helperText=\"\"\n            type=\"email\"\n            required\n          />\n          <StyledTextField\n            id=\"password\"\n            name=\"password\"\n            label=\"Password\"\n            variant=\"outlined\"\n            type=\"password\"\n            required\n            helperText={inputError}\n            error={inputError ? true : false}\n          />\n          <StyledTextField\n            id=\"password-confirm\"\n            name=\"passwordConfirm\"\n            label=\"Password Confirmation\"\n            variant=\"outlined\"\n            type=\"password\"\n            required\n            helperText={inputError}\n            error={inputError ? true : false}\n          />\n          <Grid>\n            <StyledButton\n              type=\"submit\"\n              variant=\"contained\"\n              color=\"primary\"\n              onSubmit={handleSubmit}\n              disabled={loading}\n            >\n              Sign Up\n            </StyledButton>\n            <Typography>\n              Already have an account? <Link to=\"/signin\">Sign In</Link>\n            </Typography>\n          </Grid>\n        </form>\n      </StyledPaper>\n    </Grid>\n  );\n};\n\nexport default SignUp;\n","import React, { useState } from 'react';\nimport { Container, Typography, Button } from '@material-ui/core';\nimport { useAuth } from '../../contexts/AuthContext';\nimport { useHistory } from 'react-router-dom';\n\nfunction MockDashboard() {\n  const [error, setError] = useState('');\n  const { currentUser, signOut } = useAuth();\n  const history = useHistory();\n\n  async function handleSignOut() {\n    setError('');\n\n    try {\n      await signOut();\n      history.push('/signin');\n    } catch {\n      setError('Failed to log out');\n    }\n  }\n\n  return (\n    <Container>\n      {error && <p>{error}</p>}\n      <Typography>MockDashboard</Typography>\n      <Typography>Welcome: {currentUser.email}</Typography>\n      <Button variant=\"contained\" color=\"primary\" onClick={handleSignOut}>\n        wyloguj\n      </Button>\n    </Container>\n  );\n}\n\nexport default MockDashboard;\n","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { useAuth } from '../contexts/AuthContext';\n\nexport default function PrivateRoute({ component: Component, ...rest }) {\n  const { currentUser } = useAuth();\n\n  return (\n    <Route\n      {...rest}\n      render={props => {\n        return currentUser ? (\n          <Component {...props} />\n        ) : (\n          <Redirect to=\"/signin\" />\n        );\n      }}\n    />\n  );\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { SignUp, SignIn, MockDashboard } from './views';\nimport { AuthProvider } from './contexts/AuthContext.js';\nimport PrivateRoute from './components/PrivateRoute';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport reportWebVitals from './reportWebVitals';\n\nconst BASE_NAME = '/jfddr3-money-control-app';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router basename={BASE_NAME}>\n      <Switch>\n        <AuthProvider>\n          <PrivateRoute exact path=\"/\" component={MockDashboard} />\n          <Route path=\"/signup\" component={SignUp} />\n          <Route path=\"/signin\" component={SignIn} />\n        </AuthProvider>\n      </Switch>\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}